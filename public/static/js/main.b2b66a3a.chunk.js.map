{"version":3,"sources":["httpRequestClient/index.js","Forest_list.js","webSocketClient.js","Map.js","NavBar.js","Add_forest.js","sign_in.js","sign_up.js","MapUser.js","Add_device.js","UserInfo.js","ChangePassword.js","App.js","index.js"],"names":["REACT_APP_API_BASE_URL","process","handleResponse","res","data","code","Promise","resolve","reject","message","getRequest","route","access_token","url","headers","token","localStorage","axios","get","then","postRequest","payload","post","postWithoutAuth","Forest_List","useState","forest","setForest","users","setUsers","showNestTableID","setShowNestTableID","useEffect","forestId","a","userList","toast","error","getUsers","forests","console","log","fetchData","Table","striped","bordered","hover","class","map","item","onClick","id_Forest","handleClickForestRow","to","name","district","town","province","size","latitude","longtitude","colspan","user","id","username","client","W3CWebSocket","containerStyle","width","height","Map","marker","setMarker","setData","mes","setMes","loadingMessage","setLoadingMessage","useParams","lat","lng","centerMap","setCenterMap","getDevice","deviceId","device","getDeviceMessage","loading","device_messages","getForest","onopen","onmessage","JSON","parse","Device_id","id_device","googleMapsApiKey","mapContainerStyle","center","zoom","position","Fragment","onCloseClick","length","is_removed","is_fire","power","time_stamp","renderMessage","React","memo","NavBar","navLinkStyle","color","role","setRole","history","useHistory","setId","authority","push","checkToken","Navbar","bg","variant","Brand","Nav","className","Link","style","icon","faList","faPlus","NavDropdown","title","Item","pathname","faUser","faCog","removeItem","faLock","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","submit","margin","Add_forest","classes","setName","setDistrict","setTown","setProvince","setLatitude","setLongtitude","setSize","handleSubmit","event","preventDefault","success","Container","component","maxWidth","CssBaseline","Grid","container","xs","TextField","required","fullWidth","label","type","autoComplete","value","onChange","target","Button","avatar","backgroundColor","palette","secondary","main","SignIn","setUsername","password","setPassword","setError","forest_id","checkLogin","dataSignIn","setItem","Avatar","Typography","noValidate","autoFocus","FormControlLabel","control","Checkbox","href","SignUp","setForestId","confirmPassword","setConfirmPassword","setForests","Form","Group","controlId","Label","Control","as","e","disabled","f","MapUser","window","location","substring","interval_id","setInterval","clearInterval","is_stroked","Add_device","UserInfo","info","setInfo","infoUser","getInfoUser","userInfo","ChangePassword","App","path","exact","Login","Register","Forest_list","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2b66a3a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst REACT_APP_API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:3000/api\"\r\n\r\nfunction handleResponse(res) {\r\n    if (!res.data) {\r\n        return Promise.reject('Something went wrong');\r\n    } else {\r\n        if (res.data.code === 200) {\r\n            return Promise.resolve(res.data.data);\r\n        } else {\r\n            return Promise.reject(res.data.message);\r\n        }\r\n    }\r\n};\r\n\r\nexport function getRequest(route, access_token) {\r\n    let url = `${REACT_APP_API_BASE_URL}${route}`;\r\n    let headers = {\r\n        token: access_token || localStorage.token\r\n    };\r\n    return axios.get(url, {headers}).then(handleResponse);\r\n};\r\n\r\nexport function postRequest(route, payload, access_token) {\r\n    let url = `${REACT_APP_API_BASE_URL}${route}`;\r\n    let headers = {\r\n        token: access_token ||localStorage.token\r\n    };\r\n    return axios.post(url, payload, {headers}).then(handleResponse);\r\n};\r\n\r\nexport function putRequest(route, payload, access_token) {\r\n    let url = `${REACT_APP_API_BASE_URL}${route}`;\r\n    let headers = {\r\n        token: access_token ||localStorage.token\r\n    };\r\n    return axios.put(url, payload, {headers}).then(handleResponse);\r\n};\r\n\r\nexport function deleteRequest(route, access_token) {\r\n    let url = `${REACT_APP_API_BASE_URL}${route}`;\r\n    let headers = {\r\n        token: access_token || localStorage.token\r\n    };\r\n    return axios.delete(url, {headers}).then(handleResponse);\r\n}\r\n\r\nexport function postWithoutAuth(route, payload) {\r\n    let url = `${REACT_APP_API_BASE_URL}${route}`;\r\n    return axios.post(url, payload).then(handleResponse);\r\n}\r\n\r\nexport function getWithoutAuth(route) {\r\n    let url = `${REACT_APP_API_BASE_URL}${route}`;\r\n    return axios.get(url).then(handleResponse);\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getRequest } from \"./httpRequestClient\";\r\n\r\nfunction Forest_List() {\r\n  const [forest, setForest] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [showNestTableID, setShowNestTableID] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (showNestTableID === 0) {\r\n      return;\r\n    }\r\n    const getUsers = async (forestId) => {\r\n      try {\r\n        setUsers([]);\r\n        const userList = await getRequest(`/forest/${forestId}/users`);\r\n        setUsers(userList);\r\n      } catch (err) {\r\n        toast.error(\"Get user failed.\");\r\n      }\r\n    };\r\n    getUsers(showNestTableID);\r\n  }, [showNestTableID]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const forests = await getRequest(\"/forest_list\");\r\n        setForest(forests);\r\n        console.log(forests);\r\n      } catch (err) {\r\n        //todo toast\r\n        toast.error(err);\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClickForestRow = (item) => {\r\n    if(item.id_Forest === showNestTableID) {\r\n      setShowNestTableID(0);\r\n    } else {\r\n      setShowNestTableID(item.id_Forest);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th class=\"text-center align-middle\">Name</th>\r\n          <th class=\"text-center align-middle\">District</th>\r\n          <th class=\"text-center align-middle\">Town</th>\r\n          <th class=\"text-center align-middle\">Province</th>\r\n          <th class=\"text-center align-middle\">Size</th>\r\n          <th class=\"text-center align-middle\">Latitude</th>\r\n          <th class=\"text-center align-middle\">Longtitude</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {forest.map((item) => (\r\n          <Fragment>\r\n            <tr class=\"text-center align-middle\" onClick={() => handleClickForestRow(item)}>\r\n              <td>\r\n                <Link to={`/home/${item.id_Forest}`}>{item.name}</Link>\r\n              </td>\r\n              <th>{item.district}</th>\r\n              <th>{item.town}</th>\r\n              <th>{item.province}</th>\r\n              <th>{item.size}</th>\r\n              <th>{item.latitude}</th>\r\n              <th>{item.longtitude}</th>\r\n            </tr>\r\n            {showNestTableID === item.id_Forest && (\r\n              <tr>\r\n                <td colspan=\"7\">\r\n                  <Table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>id</th>\r\n                        <th>username</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {users.map((user) => (\r\n                        <tr>\r\n                          <td>{user.id}</td>\r\n                          <td>{user.username}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </Fragment>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default Forest_List;\r\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nconst client = new W3CWebSocket('wss://treeguard-uet.herokuapp.com');\r\nexport default client;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  LoadScript,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport { getRequest } from \"./httpRequestClient\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport client from \"./webSocketClient\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"600px\",\r\n};\r\n\r\nfunction Map() {\r\n  const [marker, setMarker] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [mes, setMes] = useState([]);\r\n  const [loadingMessage, setLoadingMessage] = useState(false);\r\n  const { forestId } = useParams();\r\n  const [centerMap, setCenterMap] = useState({ lat: 0, lng: 0 });\r\n\r\n  const getDevice = async (deviceId) => {\r\n    try {\r\n      const device = await getRequest(`/devices/${deviceId}`);\r\n      setData(device);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDevice(forestId);\r\n  }, [forestId]);\r\n\r\n  // useEffect(()=> {\r\n  //   let interval_id;\r\n  //   if(marker) {\r\n  //     interval_id = setInterval(() => getDeviceMessage(marker.id_device, {loading: false}), 2000);\r\n  //   }\r\n  //   return () => {\r\n  //     clearInterval(interval_id);\r\n  //   }\r\n  // }, [marker]);\r\n  // console.log(socket);\r\n  // socket.on('connect', (data) => {\r\n  //   console.log(data);\r\n  // })\r\n  // socket.on('connect', data => {\r\n  //   console.log(data);\r\n  // });\r\n  const getDeviceMessage = async (id, { loading = true } = {}) => {\r\n    try {\r\n      if (loading) setLoadingMessage(true);\r\n      const device_messages = await getRequest(`/device_messages/${id}`);\r\n      setMes(device_messages);\r\n      if (loading) setLoadingMessage(false);\r\n    } catch (err) {\r\n      // todo toast\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getForest = async (forestId) => {\r\n    try {\r\n      const forest = await getRequest(`/forest/${forestId}`);\r\n      setCenterMap({\r\n        lat: forest[0].latitude,\r\n        lng: forest[0].longtitude,\r\n      });\r\n    } catch (err) {\r\n      // todo toast\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    client.onopen = () => {\r\n      console.log(\"WebSocket Client Connected\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!marker) {\r\n      return;\r\n    }\r\n    client.onmessage = function (message) {\r\n      const device_messages = JSON.parse(message.data);\r\n      const device_id = device_messages.Device_id;\r\n      if (device_id === marker.id_device) {\r\n        setMes([device_messages]);\r\n      }\r\n    };\r\n    return () => {\r\n      client.onmessage = () => {};\r\n    };\r\n  }, [marker]);\r\n\r\n  useEffect(() => {\r\n    getForest(forestId);\r\n  }, [forestId]);\r\n\r\n  const renderMessage = (mes) => {\r\n    return mes.length > 0 ? (\r\n      <React.Fragment>\r\n        <div>is_removed: {mes[0].is_removed}</div>\r\n        <div>is_fire: {mes[0].is_fire}</div>\r\n        <div>power: {mes[0].power}</div>\r\n        <div>time_receive: {mes[0].time_stamp}</div>\r\n      </React.Fragment>\r\n    ) : (\r\n      <div>Không có tin nhắn</div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyB6stZ3_YbkuNXaW-fgrp_RphN4FmJlego\">\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={centerMap}\r\n        zoom={10}\r\n      >\r\n        {data.map((item) => (\r\n          <Marker\r\n            position={{ lat: item.latitude, lng: item.longtitude }}\r\n            onClick={() => {\r\n              setMarker(item);\r\n              getDeviceMessage(item.id_device);\r\n            }}\r\n          ></Marker>\r\n        ))}\r\n\r\n        {marker && (\r\n          <React.Fragment>\r\n            <InfoWindow\r\n              position={{ lat: marker.latitude, lng: marker.longtitude }}\r\n              onCloseClick={() => {\r\n                setMarker(null);\r\n                setMes([]); // mes[0] => undefined\r\n              }}\r\n            >\r\n              {loadingMessage ? <div>Loading...</div> : renderMessage(mes)}\r\n            </InfoWindow>\r\n          </React.Fragment>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  faUser,\r\n  faLock,\r\n  faCog,\r\n  faPlus,\r\n  faList,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getRequest } from \"./httpRequestClient\";\r\n\r\nexport default function NavBar() {\r\n  const navLinkStyle = {\r\n    color: \"white\",\r\n  };\r\n  const [role, setRole] = useState(\"none\");\r\n  const history = useHistory();\r\n  const [id, setId] = useState(\"none\");\r\n\r\n  useEffect(() => {\r\n    async function checkToken() {\r\n      try {\r\n        const user = await getRequest(\"/check-token\");\r\n        setId(user.id)\r\n        if (user.authority === 1) {\r\n          setRole(\"admin\");\r\n        } else if (user.authority === 2) {\r\n          setRole(\"user\");\r\n        }\r\n      } catch (err) {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n    checkToken();\r\n  }, [localStorage.token]);\r\n  const renderAdminNavItem = () => (\r\n    <React.Fragment>\r\n      <Nav.Link>\r\n        <NavLink style={navLinkStyle} to=\"/forest_list\">\r\n          <FontAwesomeIcon icon={faList} /> Danh sách rừng\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <NavLink style={navLinkStyle} to=\"/add_user\">\r\n          <FontAwesomeIcon icon={faPlus} /> Thêm người dùng\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <NavLink style={navLinkStyle} to=\"/add_forest\">\r\n          <FontAwesomeIcon icon={faPlus} /> Thêm khu rừng\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <NavLink style={navLinkStyle} to=\"/add_device\">\r\n          <FontAwesomeIcon icon={faPlus} /> Thêm thiết bị\r\n        </NavLink>\r\n      </Nav.Link>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand>UET TreeGuard</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">{role === \"admin\" && renderAdminNavItem()}</Nav>\r\n      <NavDropdown title=\"More\" className=\"mr-sm-4\">\r\n        <NavDropdown.Item>\r\n          <Link to={{ pathname: `/user_info/${id}` }}>\r\n            UserInfo <FontAwesomeIcon icon={faUser} />\r\n          </Link>\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item>\r\n          <NavLink to=\"/change_password\">\r\n            Change Password <FontAwesomeIcon icon={faCog} />\r\n          </NavLink>\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item>\r\n          <NavLink\r\n            to=\"/\"\r\n            onClick={() => {\r\n              localStorage.removeItem(\"token\");\r\n              history.push(\".login\");\r\n            }}\r\n          >\r\n            Sign_Out <FontAwesomeIcon icon={faLock} />\r\n          </NavLink>\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getRequest, postRequest } from \"./httpRequestClient\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Add_forest() {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [town, setTown] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [latitude, setLatitude] = useState(\"\");\r\n  const [longtitude, setLongtitude] = useState(\"\");\r\n  const [size, setSize] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function checkToken() {\r\n      try {\r\n      } catch (err) {}\r\n    }\r\n    checkToken();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      name === \"\" ||\r\n      district === \"\" ||\r\n      town === \"\" ||\r\n      province === \"\" ||\r\n      latitude === \"\" ||\r\n      longtitude === \"\" ||\r\n      size === \"\"\r\n    ) {\r\n      toast.error(\"Missing params.\");\r\n      return;\r\n    }\r\n    try {\r\n      const forest_add = await postRequest(\"/add_forest\", {\r\n        name,\r\n        district,\r\n        town,\r\n        province,\r\n        latitude,\r\n        longtitude,\r\n        size,\r\n      });\r\n      setName(\"\");\r\n      setDistrict(\"\");\r\n      setTown(\"\");\r\n      setProvince(\"\");\r\n      setLatitude(\"\");\r\n      setLongtitude(\"\");\r\n      setSize(\"\");\r\n      toast.success(\"Add forest success.\");\r\n    } catch (err) {\r\n      toast.error(\"Add forest failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <form className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              type=\"name\"\r\n              id=\"name\"\r\n              autoComplete=\"name\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"district\"\r\n              label=\"District\"\r\n              type=\"district\"\r\n              id=\"district\"\r\n              autoComplete=\"district\"\r\n              value={district}\r\n              onChange={(event) => setDistrict(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"town\"\r\n              label=\"Town\"\r\n              type=\"town\"\r\n              id=\"town\"\r\n              autoComplete=\"town\"\r\n              value={town}\r\n              onChange={(event) => setTown(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"province\"\r\n              label=\"Province\"\r\n              type=\"province\"\r\n              id=\"province\"\r\n              autoComplete=\"province\"\r\n              value={province}\r\n              onChange={(event) => setProvince(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"latitude\"\r\n              label=\"Latitude\"\r\n              type=\"latitude\"\r\n              id=\"latitude\"\r\n              autoComplete=\"latitude\"\r\n              value={latitude}\r\n              onChange={(event) => setLatitude(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"longtitude\"\r\n              label=\"Longtitude\"\r\n              type=\"longtitude\"\r\n              id=\"longtitude\"\r\n              autoComplete=\"longtitude\"\r\n              value={longtitude}\r\n              onChange={(event) => setLongtitude(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"size\"\r\n              label=\"Size\"\r\n              type=\"size\"\r\n              id=\"size\"\r\n              autoComplete=\"size\"\r\n              value={size}\r\n              onChange={(event) => setSize(event.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={handleSubmit}\r\n        >\r\n          Add\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Add_forest;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { getRequest, postWithoutAuth } from \"./httpRequestClient\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n  const history = useHistory();\r\n\r\n  async function checkLogin() {\r\n    const token = localStorage.token;\r\n    if (!token) return;\r\n    try {\r\n      const user = await getRequest(\"/check-token\");\r\n      console.log(user);\r\n      if (user.authority === 1) {\r\n        history.push(\"/forest_list\");\r\n      } else if (user.authority === 2) {\r\n        history.push(`/home_user/${user.forest_id}`);\r\n      }\r\n    } catch (err) {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n   \r\n    checkLogin();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    if (username === \"\" || password === \"\") {\r\n      setError(true);\r\n    } else {\r\n      event.preventDefault();\r\n      try {\r\n        const dataSignIn = await postWithoutAuth(\"/login\", {\r\n          username,\r\n          password,\r\n        });\r\n        localStorage.setItem(\"token\", dataSignIn.token);\r\n        // checkLogin();\r\n\r\n        // cách này đỡ tốn 1 rq này\r\n        if (dataSignIn.user.authority === 1) {\r\n          history.push(\"/forest_list\");\r\n        } else if (dataSignIn.user.authority === 2) {\r\n          history.push(`/home_user/${dataSignIn.user.forest_id}`);\r\n        }\r\n      } catch (err) {\r\n        // toast error || alert\r\n        toast.error(err);\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}></Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            onChange={(event) => setUsername(event.target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { getRequest, postRequest } from \"./httpRequestClient\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [forest_id, setForestId] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [forests, setForests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function checkToken() {\r\n      try {\r\n      } catch (err) {}\r\n    }\r\n    checkToken();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      password === \"\" ||\r\n      forest_id === \"\" ||\r\n      username === \"\" ||\r\n      confirmPassword === \"\"\r\n    ) {\r\n      toast.error(\"Missing params.\");\r\n      return;\r\n    }\r\n    try {\r\n      await postRequest(\"/register\", {\r\n        username,\r\n        password,\r\n        forest_id,\r\n        confirmPassword,\r\n      });\r\n      setUsername(\"\");\r\n      setForestId(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      toast.success(\"Add user success.\");\r\n    } catch (err) {\r\n      toast.error(\"Add user fail.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const forests = await getRequest(\"/forest_list\");\r\n        setForests(forests);\r\n      } catch (err) {\r\n        toast.error(\"Get forest list fail.\");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}></Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Add user\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                type=\"username\"\r\n                id=\"username\"\r\n                autoComplete=\"username\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password2\"\r\n                label=\"ConfirmPassword\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {/* <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"forest_id\"\r\n                label=\"Forest_id\"\r\n                type=\"number\"\r\n                id=\"forest_id\"\r\n                onChange={(event) => setForest_id(event.target.value)}\r\n              /> */}\r\n              <Form.Group controlId=\"forest-select\">\r\n                <Form.Label>Forest</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={forest_id}\r\n                  onChange={(e) => setForestId(e.target.value)}\r\n                >\r\n                  {forest_id === \"\" && (\r\n                    <option value=\"\" disabled>\r\n                      Select forest\r\n                    </option>\r\n                  )}\r\n                  {forests.map((f) => (\r\n                    <option value={f.id_Forest}>{f.name}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  LoadScript,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\nimport { getRequest } from \"./httpRequestClient\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"600px\",\r\n};\r\n\r\nfunction MapUser() {\r\n  const [marker, setMarker] = useState(null);\r\n  const [centerMap, setCenterMap] = useState({ lat: 0, lng: 0 });\r\n  const [data, setData] = useState([]);\r\n  const [loadingMessage, setLoadingMessage] = useState(false);\r\n  const [mes, setMes] = useState([]);\r\n\r\n  const getDevice = async (deviceId) => {\r\n    try {\r\n      const device = await getRequest(`/devices/${deviceId}`);\r\n      setData(device);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDevice(window.location.pathname.substring(11));\r\n  }, [window.location.pathname.substring(11)]);\r\n\r\n  const getForest = async (forestId) => {\r\n    try {\r\n      const forest = await getRequest(`/forest/${forestId}`);\r\n      setCenterMap({\r\n        lat: forest[0].latitude,\r\n        lng: forest[0].longtitude,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getForest(window.location.pathname.substring(11));\r\n  }, [window.location.pathname.substring(11)]);\r\n\r\n  useEffect(()=> {\r\n    let interval_id;\r\n    if(marker) {\r\n      interval_id = setInterval(() => getDeviceMessage(marker.id_device, {loading: false}), 2000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval_id);\r\n    }\r\n  }, [marker]);\r\n\r\n  const getDeviceMessage = async (id, {loading = true} = {}) => {\r\n    try {\r\n      if(loading) setLoadingMessage(true);\r\n      const device_messages = await getRequest(`/device_messages/${id}`);\r\n      setMes(device_messages);\r\n      if(loading) setLoadingMessage(false);\r\n    } catch (err) {\r\n      // todo toast\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const renderMessage = (mes) => {\r\n    return mes.length > 0 ? (\r\n      <React.Fragment>\r\n        <div>is_stroked: {mes[0].is_stroked}</div>\r\n        <div>is_removed: {mes[0].is_removed}</div>\r\n        <div>is_fire: {mes[0].is_fire}</div>\r\n        <div>power: {mes[0].power}</div>\r\n      </React.Fragment>\r\n    ) : (\r\n      <div>Không có tin nhắn</div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyB6stZ3_YbkuNXaW-fgrp_RphN4FmJlego\">\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={centerMap}\r\n        zoom={10}\r\n      >\r\n        {data.map((item) => (\r\n          <Marker\r\n            position={{ lat: item.latitude, lng: item.longtitude }}\r\n            onClick={() => {\r\n              setMarker(item);\r\n              getDeviceMessage(item.id_device);\r\n            }}\r\n          ></Marker>\r\n        ))}\r\n        {marker && (\r\n          <React.Fragment>\r\n            <InfoWindow\r\n              position={{ lat: marker.latitude, lng: marker.longtitude }}\r\n              onCloseClick={() => {\r\n                setMarker(null);\r\n                setMes([]); // mes[0] => undefined\r\n              }}\r\n            >\r\n              {loadingMessage ? <div>Loading...</div> : renderMessage(mes)}\r\n            </InfoWindow>\r\n          </React.Fragment>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default MapUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getRequest, postRequest } from \"./httpRequestClient\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { InputLabel, Select } from \"@material-ui/core\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction Add_device() {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState();\r\n  const [latitude, setLatitude] = useState();\r\n  const [longtitude, setLongtitude] = useState();\r\n  const [forestId, setForestId] = useState(\"\");\r\n  const history = useHistory();\r\n  const [forests, setForests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function checkToken() {\r\n      try {\r\n      } catch (err) {}\r\n    }\r\n    checkToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const forests = await getRequest(\"/forest_list\");\r\n        setForests(forests);\r\n      } catch (err) {\r\n        toast.error(\"Get forest list fail.\");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      name === \"\" ||\r\n      latitude === \"\" ||\r\n      longtitude === \"\" ||\r\n      forestId === \"\"\r\n    ) {\r\n      toast.error(\"Missing params.\");\r\n      return;\r\n    } \r\n    try {\r\n      await postRequest(\"/add_device\", {\r\n        name,\r\n        latitude,\r\n        longtitude,\r\n        forestId,\r\n      });\r\n      setName(\"\");\r\n      setLongtitude(\"\");\r\n      setLatitude(\"\");\r\n      setForestId(\"\");\r\n      // console.log(\"success\");\r\n      toast.success(\"Create success!\");\r\n    } catch (err) {\r\n      toast.error(\"Something wrong!!!\");\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <form className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              type=\"name\"\r\n              id=\"name\"\r\n              autoComplete=\"name\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"latitude\"\r\n              label=\"Latitude\"\r\n              type=\"latitude\"\r\n              id=\"latitude\"\r\n              autoComplete=\"latitude\"\r\n              value={latitude}\r\n              onChange={(event) => setLatitude(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              name=\"longtitude\"\r\n              label=\"Longtitude\"\r\n              type=\"longtitude\"\r\n              id=\"longtitude\"\r\n              autoComplete=\"longtitude\"\r\n              value={longtitude}\r\n              onChange={(event) => setLongtitude(event.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Form.Group controlId=\"forest-select\">\r\n              <Form.Label>Forest</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={forestId}\r\n                onChange={(e) => setForestId(e.target.value)}\r\n              >\r\n                {forestId === \"\" && (\r\n                  <option value=\"\" disabled>\r\n                    Select forest\r\n                  </option>\r\n                )}\r\n                {forests.map((f) => (\r\n                  <option value={f.id_Forest}>{f.name}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={handleSubmit}\r\n        >\r\n          Add\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Add_device;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getRequest } from \"./httpRequestClient\";\r\n\r\n\r\nexport default function UserInfo() {\r\n  const [info, setInfo] = useState([]);\r\n  const {infoUser} = useParams();\r\n\r\n  const getInfoUser = async (userInfo) => {\r\n      try{\r\n          const info = await getRequest(`/user_info/${userInfo}`);\r\n          setInfo(info);\r\n      } catch (err) {\r\n          console.log(err);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n      getInfoUser(infoUser);\r\n  }, [infoUser])\r\n\r\n  console.log(info);\r\n  return (\r\n    <React.Fragment>\r\n      <label>Last Name: </label>\r\n      <label></label>\r\n      <br />\r\n      <label>First Name: </label>\r\n      <label></label>\r\n      <br />\r\n      <label>Email: </label>\r\n      <label></label>\r\n      <br />\r\n      <label>Phone: </label>\r\n      <label></label>\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { getRequest, postWithoutAuth } from \"./httpRequestClient\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  //   submit: {\r\n  //     margin: theme.spacing(3, 0, 2),\r\n  //   },\r\n}));\r\n\r\nexport default function ChangePassword() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}></Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Change Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"current password\"\r\n            label=\"Current Password\"\r\n            name=\"current password\"\r\n            autoComplete=\"current password\"\r\n            //   onChange={(event) => setUsername(event.target.value)}\r\n            autoFocus\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"new password\"\r\n            label=\"New Password\"\r\n            name=\"new password\"\r\n            autoComplete=\"new password\"\r\n            //   onChange={(event) => setUsername(event.target.value)}\r\n            autoFocus\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"confirm new password\"\r\n            label=\"Confirm New Password\"\r\n            name=\"confirm new password\"\r\n            autoComplete=\"confirm new password\"\r\n            //   onChange={(event) => setUsername(event.target.value)}\r\n            autoFocus\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            // onClick={handleSubmit}\r\n          >\r\n            Change\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Forest_list from \"./Forest_list\";\nimport Map from \"./Map\";\nimport NavBar from \"./NavBar\";\nimport Add_forest from \"./Add_forest\";\nimport Login from \"./sign_in\";\nimport Register from \"./sign_up\";\nimport MapUser from \"./MapUser\";\nimport Add_device from \"./Add_device\";\nimport UserInfo from \"./UserInfo\";\nimport ChangePassword from \"./ChangePassword\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route\n            component={() => (\n              <Fragment>\n                <NavBar />\n                <Switch>\n                  <Route path=\"/home_user\" component={MapUser} />\n                  <Route path=\"/home/:forestId\" component={Map} />\n                  <Route path=\"/add_user\" component={Register} />\n                  <Route path=\"/forest_list\" component={Forest_list} />\n                  <Route path=\"/add_forest\" component={Add_forest} />\n                  <Route path=\"/add_device\" component={Add_device} />\n                  <Route path=\"/user_info/:infoUser\" component={UserInfo}/>\n                  <Route path=\"/change_password\" component={ChangePassword}/>\n                </Switch>\n              </Fragment>\n            )}\n          />\n        </Switch>\n        {/* <Fake /> */}\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable={false}\n          pauseOnHover\n        />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default React.memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}